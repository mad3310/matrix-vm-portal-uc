<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties"/>
    </bean>

    <bean class="com.letvcloud.saas.util.LogConfig" init-method="reload">
        <constructor-arg>
            <value>classpath:${logback}</value>
        </constructor-arg>
    </bean>

    <bean class="com.letvcloud.saas.util.cache.CbaseCacheClient"/>
    <!-- redis -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          scope="prototype">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
    <!-- CBase缓存 -->
    <bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <constructor-arg>
            <list>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcache.nodelist}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcache.port}</value>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <property name="connectionPoolSize" value="${memcache.connectionPoolSize}"></property>
    </bean>
    <bean id="memcachedClient" factory-bean="memcachedClientBuilder" factory-method="build" destroy-method="shutdown"/>

    <!-- 未知异常处理类 -->
    <bean class="com.letvcloud.saas.exception.UnknownExceptionAlerter"/>

    <context:annotation-config/>
    <context:component-scan base-package="com.letvcloud.saas.util.*">
        <context:exclude-filter type="regex" expression="com.letvcloud.saas.util.session.*"/>
    </context:component-scan>
    <context:component-scan base-package="com.letvcloud.uc.service"/>
    <context:component-scan base-package="com.letvcloud.uc"/>
    <context:component-scan base-package="com.letvcloud"/>

    <import resource="applicationContext-dataSource.xml"/>
    <import resource="applicationContext-dubbo.xml"/>
    <import resource="uc-service-provider.xml"/>
    <import resource="service-consumer.xml"/>
    <import resource="applicationContext-shiro.xml"/>




    <!-- 定义易受环境影响的变量 -->
    <beans profile="local">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>local/application.properties</value>
                    <value>dubbo.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="dev">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>dev/application.properties</value>
                    <value>dubbo.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="prod">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>prod/application.properties</value>
                    <value>dubbo.properties</value>
                </list>
            </property>
        </bean>
    </beans>

</beans>
