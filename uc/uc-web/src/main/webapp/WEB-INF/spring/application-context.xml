<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.1.xsd 
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.1.xsd">


    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer" >
        <property name="properties" ref="configProperties"/>
    </bean>

    <bean class="com.letvcloud.saas.util.LogConfig" init-method="reload">
        <constructor-arg>
            <value>${logbackConfFile}</value>
        </constructor-arg>
    </bean>

    <import resource="applicationContext-dubbo.xml"/>
    <import resource="service-consumer.xml"/>
    <import resource="applicationContext-shiro.xml"/>

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- bean annotation driven -->
    <context:annotation-config/>
    <!--<context:component-scan base-package="com.letvcloud.framework.controller">-->
        <!--<context:exclude-filter type="regex" expression="com.letv.live.framework.service.async..*"/>-->
    <!--</context:component-scan>-->

    <bean class="com.letvcloud.saas.util.cache.CbaseCacheClient"/>

    <context:component-scan base-package="com.letvcloud.saas.util.cache"/>
    <context:component-scan base-package="com.letvcloud.saas.util.mail"/>
    <context:component-scan base-package="com.letvcloud.saas.util.sms"/>
    <context:component-scan base-package="com.letvcloud.saas.util.redis"/>
    <context:component-scan base-package="com.letvcloud.uc.utils" />

    <!-- 未知异常处理类 -->
    <bean class="com.letvcloud.saas.exception.UnknownExceptionAlerter"/>

    <!-- Enables the Spring Task @Scheduled programming model -->
    <task:executor id="executor" pool-size="5"/>
    <task:scheduler id="scheduler" pool-size="5"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>

    <!-- redis -->
    <bean id="jedisPoolConfig1" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig1"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <!-- CBase缓存 -->
    <bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <constructor-arg>
            <list>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcache.nodelist}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcache.port}</value>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <property name="connectionPoolSize" value="${memcache.connectionPoolSize}"></property>
    </bean>
    <bean id="memcachedClient" factory-bean="memcachedClientBuilder" factory-method="build" destroy-method="shutdown"/>
    <!-- 定义易受环境影响的变量 -->
    <beans profile="local">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="fileEncoding" value="utf-8" />
            <property name="locations">
                <list>
                    <value>WEB-INF/conf/local/application.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="dev">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="fileEncoding" value="utf-8" />
            <property name="locations" >
                <list>
                    <value>WEB-INF/conf/dev/application.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="prod">
        <bean id="configProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="fileEncoding" value="utf-8" />
            <property name="locations">
                <list>
                    <value>WEB-INF/conf/prod/application.properties</value>
                </list>
            </property>
        </bean>
    </beans>
</beans>
